{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"img  {\\n    width: 100%;\\n    height: 300px; \\n}\\n\\n@media(min-width: 600px) {\\n    img {\\n        width: 50%;\\n    }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gsYUFBYTtBQUNqQjs7QUFFQTtJQUNJO1FBQ0ksVUFBVTtJQUNkO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImltZyAge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMzAwcHg7IFxufVxuXG5AbWVkaWEobWluLXdpZHRoOiA2MDBweCkge1xuICAgIGltZyB7XG4gICAgICAgIHdpZHRoOiA1MCU7XG4gICAgfVxufSJdfQ== */\"","module.exports = \"<mat-toolbar color = \\\"primary\\\">\\n  <span>Letting You Go Is Not Easy</span>\\n</mat-toolbar>\\n\\n\\n\\n\\n<mat-vertical-stepper [linear]=\\\"isLinear\\\" #stepper>\\n  <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n    <form [formGroup]=\\\"firstFormGroup\\\">\\n      <ng-template matStepLabel>Hey Gargi: It all started of Like this ahh</ng-template>\\n\\n\\n        <p>\\n            Meeting you was wonderfull. Remember the day i texted you, and the bogus thing  that i came up with friends poking me.\\n            And the infamous Pickup line : Auto complete it and might find the answer ? :D !! \\n            The long the talks that we used to have in the night, am really gonna miss it.  \\n        </p>\\n\\n      <div>\\n        <button mat-button matStepperNext>Next</button>\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n    <form [formGroup]=\\\"secondFormGroup\\\">\\n      <ng-template matStepLabel>Oh: The Coffee Night</ng-template>\\n        <p>\\n          How can i forget that coffee Night, i dont know how i suddenely felt to ask you out on a coffee. But here it is:  I DID ASK YOU OUT THAT NIGHT\\n          I think thats were we started bonding. Really i went out of topics that day, and somehow didnt wanted that time to end. And the good part was you were drilling it, \\n          which kept the conversation alive. :D \\n        </p>\\n      <div>\\n        <button mat-button matStepperPrevious>Back</button>\\n        <button mat-button matStepperNext>Next</button>\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step>\\n    <ng-template matStepLabel>The First Night Out</ng-template>\\n    <p>\\n      Truely confronting, I never even thought or planed for any sort of physical thing, it just happened. And the following day was headache because of the nuisance\\n      created by your team mates and the shitty office. \\n    </p>\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button (click)=\\\"stepper.reset()\\\">Reset</button>\\n    </div>\\n  </mat-step>\\n  <mat-step>\\n    <ng-template matStepLabel>What you truely Ment to ME</ng-template>\\n    <mat-form-field class=\\\"example-chip-list\\\">\\n      <mat-chip-list #chipList>\\n        <mat-chip\\n          *ngFor=\\\"let fruit of  fruits\\\"\\n          [selectable]=\\\"selectable\\\"\\n          [removable]=\\\"removable\\\"\\n          (removed)=\\\"remove(fruit)\\\">\\n          {{fruit}}\\n          <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\n        </mat-chip>\\n        <input\\n          placeholder=\\\"New fruit...\\\"\\n          #fruitInput\\n          [formControl]=\\\"fruitCtrl\\\"\\n          [matAutocomplete]=\\\"auto\\\"\\n          [matChipInputFor]=\\\"chipList\\\"\\n          [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\n          [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\n          (matChipInputTokenEnd)=\\\"add($event)\\\">\\n      </mat-chip-list>\\n      <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selected($event)\\\">\\n        <mat-option *ngFor=\\\"let fruit of filteredFruits | async\\\" [value]=\\\"fruit\\\">\\n          {{fruit}}\\n        </mat-option>\\n      </mat-autocomplete>\\n\\n    </mat-form-field>\\n\\n    <div *ngIf=\\\"autoCompletethis\\\">\\n      <p>Try Out other Options Dear</p>\\n   </div>\\n\\n   <div *ngIf = \\\"Love\\\">\\n        <img  src=\\\"https://i.pinimg.com/originals/19/36/8c/19368c643f122add724d57b9715f5216.jpg\\\" alt=\\\"My Dear Love !!\\\">\\n        <p>\\n          I will cherish each and every moment spent together with you Gargi, I really adore that you decided to walk into my sddist life and for short time thugh \\n          and you made it cheerful. I always wanted someone to go back too, lean and to care for someone. although now ill be going back staring at walls of my \\n          empty echoing room. You stepped in and you filled it with songs and all the colors of your versions. Im gonna miss each every thing, form getting drench in rain\\n          or trying to watch KGF (someday will try to complete it :D). Or it may be feeding you with my hands.  \\n          <strong>A PART OF ME LOVED YOU DEEPLY !</strong> \\n        </p>\\n   </div>\\n\\n   <div *ngIf = \\\"Random\\\">\\n     <p>Nahh!!!</p>\\n   </div>\\n\\n   <div *ngIf = \\\"Hate\\\">\\n     <p>Seriously ???</p>\\n   </div>\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button (click)=\\\"stepper.reset()\\\">Reset</button>\\n    </div>\\n  </mat-step>\\n</mat-vertical-stepper>\"","import {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport { Component, OnInit,  ElementRef, ViewChild } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport {MatAutocompleteSelectedEvent, MatChipInputEvent, MatAutocomplete} from '@angular/material';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'gargi-farewell';\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  isLinear = false;\n  visible = true;\n  selectable = true;\n  removable = true;\n  addOnBlur = true;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  fruitCtrl = new FormControl();\n  filteredFruits: Observable<string[]>;\n  fruits: string[] = [];\n  allFruits: string[] = ['Auto Complete This..!', 'Loved You', 'Hate You', 'Some Random', ];\n  autoCompletethis = false;\n  Love = false;\n  Random = false;\n  Hate = false;\n\n  @ViewChild('fruitInput') fruitInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\n\n  constructor(private _formBuilder:FormBuilder) {\n    this.filteredFruits = this.fruitCtrl.valueChanges.pipe(\n      startWith(null),\n      map((fruit: string | null) => fruit ? this._filter(fruit) : this.allFruits.slice()));\n  }\n\n  ngOnInit() {\n    this.firstFormGroup = this._formBuilder.group({\n      firstCtrl: ['', Validators.required]\n    });\n    this.secondFormGroup = this._formBuilder.group({\n      secondCtrl: ['', Validators.required]\n    });\n  }\n\n\n  add(event: MatChipInputEvent): void {\n    // Add fruit only when MatAutocomplete is not open\n    // To make sure this does not conflict with OptionSelected Event\n    if (!this.matAutocomplete.isOpen) {\n      const input = event.input;\n      const value = event.value;\n\n      // Add our fruit\n      if ((value || '').trim()) {\n        this.fruits.push(value.trim());\n      }\n\n      // Reset the input value\n      if (input) {\n        input.value = '';\n      }\n\n      this.fruitCtrl.setValue(null);\n    }\n  }\n\n  remove(fruit: string): void {\n    const index = this.fruits.indexOf(fruit);\n    this.autoCompletethis =false;\n    this.Hate = false;\n    this.Love = false;\n    this.Random = false;\n\n    if (index >= 0) {\n      this.fruits.splice(index, 1);\n    }\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    const value = event.option.value;\n    // console.log(value)\n    switch(value) {\n      case 'Auto Complete This..!' : \n          this.autoCompletethis = true;\n          this.Love = false;\n          this.Hate = false;\n          this.Random = false;\n          break\n      case 'Loved You' : \n             this.Hate = false;\n             this.Love = true;\n             this.autoCompletethis = false;\n             this.Random = false;\n            break\n      case 'Hate You' :\n            this.Hate = true; \n            this.Love = false;\n             this.autoCompletethis = false;\n             this.Random = false;\n            break\n      case 'Some Random':\n            this.Random = true;\n            this.Love = false;\n            this.autoCompletethis = false;\n            // this.Random = false;\n            this.Hate = false;\n            break\n      default: this.autoCompletethis = true;      \n\n    }\n    this.fruits.push(event.option.viewValue);\n    this.fruitInput.nativeElement.value = '';\n    this.fruitCtrl.setValue(null);\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.allFruits.filter(fruit => fruit.toLowerCase().indexOf(filterValue) === 0);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule} from '@angular/forms'\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\n\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatStepperModule,\n    MatFormFieldModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatChipsModule,\n    MatIconModule,\n    MatAutocompleteModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}